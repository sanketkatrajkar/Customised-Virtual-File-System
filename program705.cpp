////////////////////////////////////////////////////////////////////////////////////
//
//   Header file Inclusion
//
//////////////////////////////////////////////////////////////////////////////////////
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>

#include<iostream>

using namespace std;

////////////////////////////////////////////////////////////////////////////////////
//
//   User fefined Marcros;
//
/////////////////////////////////////////////////////////////////////////////////////

# define MAXFILESIZE 100

# define MAXINODE 5

# define READ 1
# define WRITE 2
# define EXECUTE 4

# define REGULAFILE 1
# define SPECIALFILE 2

# define START 0
# define CURRENT 1
# define END 2

////////////////////////////////////////////////////////////////////////////////////
//
//   Structure Name : BootBlock
//   Discription :    Holds Infomation to botot the operatin system
//
/////////////////////////////////////////////////////////////////////////////////////

struct BoolBlock
{
    char Information[100];

}boolobj;

////////////////////////////////////////////////////////////////////////////////////
//
//   Structure Name : SuperBlock
//   Discription :    Hold the infomation about the file System
//
/////////////////////////////////////////////////////////////////////////////////////

struct SuperBlock
{
    int TotalInodes;
    int FreeInodes;

};


////////////////////////////////////////////////////////////////////////////////////
//
//   Structure Name : Inode
//   Discription :    Hold the infomation about the file 
//
/////////////////////////////////////////////////////////////////////////////////////

typedef struct Inode
{
    char FileName[50];
    int InodeNumber;
    int FileSize;
    int ActualFileSize;
    int FileType;
    int ReferenceCount;
    int LinkCount;
    char *Buffer;
    int Permission;

    struct Inode *next;
    
}INODE , *PINODE , ** PPINODE;

////////////////////////////////////////////////////////////////////////////////////
//
//   Structure Name : FileTable
//   Discription :    Hold the infomation about the opend file 
//
/////////////////////////////////////////////////////////////////////////////////////

typedef struct FileTable
{
    int ReadOffSet;
    int WriteOffSet;
    int Count;
    int Mode;

    PINODE ptrinode;
}FILETABLE , *PFILETABLE;

////////////////////////////////////////////////////////////////////////////////////
//
//   Structure Name : UREA
//   Discription :    Hold the infomation about the Process. 
//
/////////////////////////////////////////////////////////////////////////////////////

struct UAREA
{
    char ProcessName[50];
    PFILETABLE UFDT[MAXINODE];

};

////////////////////////////////////////////////////////////////////////////////////
//
//     Golble varible for object  used in project
//
/////////////////////////////////////////////////////////////////////////////////////

 SuperBlock superobj;
 PINODE head = NULL;
 UAREA uareaobj;


////////////////////////////////////////////////////////////////////////////////////
//
//   Entry point function of project (main)
//
/////////////////////////////////////////////////////////////////////////////////////

int main ()
{
    BoolBlock  bootobj;
    strcpy(bootobj.Information ,"Boot Process of Operatin System done");

    cout << bootobj.Information << "\n";
    
    return 0;
}